<!DOCTYPE html>
<html>
<head>
  <script src="d3.v3.min.js"></script>
  <script src="dimple.v2.0.0.js"></script>
  <script src="x-tag-core.min.js"></script>
  <script>
    var dataRepo ={};
    dataRepo['data'] = [
      { "Word":"Hello", "Awesomeness":2000 },
      { "Word":"World", "Awesomeness":3000 }
    ];
  </script>
  <script>
    xtag.register('dimple-chart', {
      lifecycle: {
        created: function(){
          console.log('dimple-chart created');

        },
        inserted: function(){

          this.innerHTML = '<svg width='+this.width+' height='+this.height+'></svg>'+this.innerHTML;
          this.xtag.svg = this.firstElementChild;

          var chart = new dimple.chart(d3.select(this.xtag.svg), this.data);
          chart.setMargins(this['margin-left'],this['margin-top'],this['margin-right'],this['margin-bottom']);

          var dimple_axes = xtag.queryChildren(this,'dimple-axis');
          for(var i = 0; i<dimple_axes.length; i++){
            var axs = dimple_axes[i];
            var type = axs.type || "measure";
            var title = axs.title;
            //var displayTitle = axs.displayTitle === "true";
            var display = axs.display === "true";
            var orderBy = axs.orderBy;

            var _axis = null;
            if(type === "measure"){
              _axis = chart.addMeasureAxis(axs.position, axs.field);
            }
            else if(type === "category"){
              _axis = chart.addCategoryAxis(axs.position, axs.field);
            }
            else if(type === "percent"){
              _axis = chart.addPercentAxis(axs.position, axs.field);
            }
            else if(type === "color"){
              _axis = chart.addColorAxis(axs.position, axs.field);
            }
            else if(type === "log"){
              _axis = chart.addLogAxis(axs.position, axs.field);
            }

            if(_axis.title !== null) _axis.title = title;
            _axis.hidden = !display;
            if(orderBy !== null) _axis.addOrderRule(orderBy);

          }

          var dimple_series = xtag.queryChildren(this,'dimple-series');
          for(var i=0; i<dimple_series.length;i++){
            var ser = dimple_series[i];
            var series = ser.series === null ? null : ser.series.split(',');
            var type = ser.type;
            chart.addSeries(series,dimple.plot[type]);
          }

          var dimple_legend = xtag.queryChildren(this,'dimple-legend');// zero or one
          for(var i=0; i<dimple_legend.length;i++){
            var lgd = dimple_legend[i];
            chart.addLegend(lgd.x,lgd.y,lgd.width,lgd.height,lgd.horizontalAlign,lgd.series);
          }


          if(dimple_series.length == 0){
            chart.addSeries(null, dimple.plot[this.type]);
          }

          this.xtag.chart = chart;
          chart.draw();
          console.log('dimple-chart inserted');
        }
      },
      accessors: {
        data: {
          attribute: {},
          get: function(){ return dataRepo[this.getAttribute("data")]; },
          set: function(value){
            //this.xtag.data = value;
          }
        },
        height: {
          attribute: {},
          get: function(){ return this.getAttribute("height") || 300; },
          set: function(value){
            //this.xtag.svg.setAttribute("height", value);
          }
        },
        width: {
          attribute: {},
          get: function(){ return this.getAttribute("width") || 500; },
          set: function(value){
            //this.xtag.svg.setAttribute("width", value);
          }
        },
        type: {
          attribute: {},
          get: function(){ return this.getAttribute("type") || "bar"; },
          set: function(value){
            //this.xtag.svg.setAttribute("width", value);
          }
        },
        'margin-top': { get: function(){ return this.getAttribute("margin-top") || '10%'; } },
        'margin-bottom': { get: function(){ return this.getAttribute("margin-bottom") || '15%'; } },
        'margin-left': { get: function(){ return this.getAttribute("margin-left") || '10%'; } },
        'margin-right': { get: function(){ return this.getAttribute("margin-right") || '10%'; } },
      }
    });

    xtag.register('dimple-axis',{
      accessors: {
        position: { get: function(){ return this.getAttribute("position"); } },
        type: { get: function(){ return this.getAttribute("type") || "measure"; } },
        field: { get: function(){ return this.getAttribute("field") || "bar"; } },
        title: { get: function(){ return this.getAttribute("title") ; } },
        //displayTitle: { get: function(){ return this.getAttribute("displayTitle") || "true"; } },
        display: { get: function(){ return this.getAttribute("display") || "true"; } },
        orderBy: { get: function(){ return this.getAttribute("orderBy"); } },
      }
    });

    xtag.register('dimple-series',{
      accessors: {
        series: { get: function(){ return this.getAttribute("series") || null; } },
        type: { get: function(){ return this.getAttribute("type") || "bar"; } },
      }
    });

    xtag.register('dimple-legend',{
      accessors: {
        x: { get: function(){ return this.getAttribute("x"); } },
        y: { get: function(){ return this.getAttribute("y"); } },
        width: { get: function(){ return this.getAttribute("width"); } },
        height: { get: function(){ return this.getAttribute("height"); } },
        horizontalAlign: { get: function(){ return this.getAttribute("horizontalAlign") || 'left'; } },
        series: { get: function(){ return this.getAttribute("series") || null; } },
      }
    });
  </script>
</head>

<body>
  <dimple-chart data="data" height="300" width="300" margin-bottom="15%" type="bar">
    <dimple-axis position="y" type="measure" field="Awesomeness"></dimple-axis>
    <dimple-axis position="x" type="category" field="Word" orderBy="Word"></dimple-axis>
    <dimple-legend x="10" y="10" width="500" height="30" ></dimple-legend>
  </dimple-chart>
  <dimple-chart data="data" height="300" width="300" margin-bottom="15%">
    <dimple-axis position="y" type="measure" field="Awesomeness" display="false"></dimple-axis>
    <dimple-axis position="x" type="category" field="Word" title="this is a title"></dimple-axis>
    <dimple-series type="bar"></dimple-series>
  </dimple-chart>
</body>
</html>
